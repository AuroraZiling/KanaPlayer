<ResourceDictionary
    x:ClassModifier="internal"
    xmlns="https://github.com/avaloniaui"
    xmlns:attaching="clr-namespace:KanaPlayer.Controls.Attaching"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="20">
                <ToggleButton Content="Click Me!" />
                <ToggleButton Content="Disabled" IsEnabled="False" />
                <ToggleButton Content="Three state" IsThreeState="True" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    
    <SolidColorBrush x:Key="KanaToggleButtonNavigationCheckedBackgroundBrush" Color="{DynamicResource KanaAccentColor}" Opacity="0.4"></SolidColorBrush>
    <SolidColorBrush x:Key="KanaToggleButtonNavigationPointerOverBackgroundBrush" Color="{DynamicResource KanaAccentColor}" Opacity="0.5"></SolidColorBrush>
    <SolidColorBrush x:Key="KanaToggleButtonNavigationBackgroundBrush" Color="{DynamicResource KanaAccentColor}" Opacity="0.1"></SolidColorBrush>

    <ControlTheme TargetType="ToggleButton" x:Key="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderTransform" Value="none" />
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Duration="0:0:.075" Property="RenderTransform" />
            </Transitions>
        </Setter>

        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="{TemplateBinding Padding}">

                    <DockPanel
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        HorizontalSpacing="4"
                        LastChildFill="True"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <LucideIcon
                            DockPanel.Dock="{TemplateBinding attaching:Icon.Dock}"
                            HorizontalAlignment="Center"
                            IsVisible="{Binding $self.Kind, Converter={x:Static ObjectConverters.NotEqual}, ConverterParameter={x:Static attaching:Icon.EmptyLucideIconKind}}"
                            Kind="{TemplateBinding attaching:Icon.LucideIconKind}"
                            Size="18"
                            VerticalAlignment="Center" />
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            RecognizesAccessKey="True"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            x:Name="PART_ContentPresenter" />
                    </DockPanel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
            <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Setter Property="RenderTransform" Value="scale(0.98)" />
        </Style>

        <Style Selector="^:pressed /template/ Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
            <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
            </Style>
        </Style>

        <Style Selector="^:disabled /template/ Border">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundDisabled}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushDisabled}" />
            <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundDisabled}" />
            </Style>
        </Style>

        <Style Selector="^:indeterminate">
            <Style Selector="^ /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminate}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminate}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminate}" />
                </Style>
            </Style>

            <Style Selector="^:pointerover /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminatePointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePointerOver}" />
                </Style>
            </Style>

            <Style Selector="^:pressed /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminatePressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePressed}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePressed}" />
                </Style>
            </Style>

            <Style Selector="^:disabled /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminateDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminateDisabled}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminateDisabled}" />
                </Style>
            </Style>
        </Style>

        <Style Selector="^:checked">
            <Style Selector="^ /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
                </Style>
            </Style>

            <Style Selector="^:pointerover /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
                </Style>
            </Style>

            <Style Selector="^:pressed /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPressed}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
                </Style>
            </Style>

            <Style Selector="^:disabled /template/ Border">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedDisabled}" />
                <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedDisabled}" />
                </Style>
            </Style>
        </Style>

        <Style Selector="^.Navigation">
            <Setter Property="Background" Value="{DynamicResource KanaToggleButtonNavigationBackgroundBrush}"></Setter>
            <Style Selector="^:checked">
                <Style Selector="^ /template/ Border">
                    <Setter Property="Background" Value="{DynamicResource KanaToggleButtonNavigationCheckedBackgroundBrush}"></Setter>
                    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
                    <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
                    </Style>
                </Style>

                <Style Selector="^:pointerover /template/ Border">
                    <Setter Property="Background" Value="{DynamicResource KanaToggleButtonNavigationPointerOverBackgroundBrush}"></Setter>
                    <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
                    <Style Selector="^ ContentPresenter#PART_ContentPresenter">
                        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
                    </Style>
                </Style>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>